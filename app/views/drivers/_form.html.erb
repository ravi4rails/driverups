<%= form_with(model: @driver, url: [ @agency, @driver ], local: true, html: {id: 'driver_form'}) do |form| %>
  <%= form.hidden_field :latitude, id: :latitude %>
  <%= form.hidden_field :longitude, id: :longitude %>
  <%= form.hidden_field :agency_id, value: @agency.id %>
  <div class="form-group row">
    <div class="col-md-6">
        <%= form.label :first_name %>
        <%= form.text_field :first_name, class: "form-control rounded-0" %>
    </div>
  
    <div class="col-md-6">
      <%= form.label :last_name %>
      <%= form.text_field :last_name, class: "form-control rounded-0" %>
    </div>
  </div>

  <div class="form-group row">
    <div class="col-md-6">
      <%= form.label :contact_1 %>
      <%= form.text_field :contact_1 , class: "form-control rounded-0"%>
    </div>

    <div class="col-md-6">
      <%= form.label :contact_2 %>
      <%= form.text_field :contact_2, class: "form-control rounded-0" %>      
    </div>
  </div>

  <div class="form-group">
    <%= form.label :address %>
    <%= form.text_field :address, class: "form-control", placeholder: "Driver Address", required: true, id: "autocomplete0", onFocus: "geolocate()" %>
  </div>

  <div class="form-group row">
    <div class="col-md-6">
      <%= form.label :city %>
      <%= form.text_field :city, class: "form-control rounded-0",required: true, id: :locality, disabled: true %>      
    </div>

    <div class="col-md-6">
      <%= form.label :state %>
      <%= form.text_field :state, class: "form-control rounded-0",id: :administrative_area_level_1, disabled: true %>
    </div>
  </div>

  <div class="form-group row">
    <div class="col-md-6">
      <%= form.label :country %>
      <%= form.text_field :country, class: "form-control rounded-0", id: :country, disabled: true  %>      
    </div>
    <div class="col-md-6">
      <%= form.label :zipcode %>
      <%= form.text_field :zipcode, class: "form-control rounded-0", id: :postal_code, disabled: true %>
    </div> 
  </div>
  
  <div class="form-group row">
    <div class="col-md-6">
      <%= form.label :driving_license %>
      <%= form.text_field :id_proof, class: "form-control rounded-0" %>
    </div>
    <div class="col-md-6">
      <%= form.label :additional_id %>
      <%= form.select :additional_id, options_for_select(Driver::PROOF, selected: form.object.try(:additional_id)), {include_blank: "Select Additonal proof"}, { class: "form-control form-control-line", required: true } %>
    </div>      
  </div>
  
  <div class="row">
    <div class="col-md-6">
      <%= form.label :profile_image %>
      <%= form.file_field :profile_image %>
    </div>
    <div class="col-md-6">
      <div id="text_div"></div>
      <div class="form-group" id="additional_proof_div" style="display:none">
       <%= form.file_field :additional_proof %>
      </div>      
    </div>
  </div>

  <div class="actions">
    <%= form.submit class: "btn btn-info"%>
  </div>
<% end %>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBFBYM37YGMTdgkEp9fipPljSjprTDZL8Y&libraries&libraries=places&callback=initAutocomplete"
    async defer></script>
<script type="text/javascript">
  $('#driver_additional_id').change(function(){
    if($('#driver_additional_id').val() !== "") {
      $('#text_div').html($('#driver_additional_id').val())
      $('#additional_proof_div').show();
    }else{
      $('#additional_proof_div').hide();
      $('#text_div').hide();
    }
  });

</script>

<script type="text/javascript">
  var placeSearch, autocomplete;
var componentForm = {
  locality: 'long_name',
  administrative_area_level_1: 'long_name',
  country: 'long_name',
  postal_code: 'short_name'
};

function initAutocomplete() {
  autocomplete = new google.maps.places.Autocomplete(
      /** @type {!HTMLInputElement} */(document.getElementById('autocomplete0')),
      {types: ['geocode']});
  autocomplete.addListener('place_changed', fillInAddress);
}

function fillInAddress() {
  var place = autocomplete.getPlace();

  $("#latitude").val(place.geometry.location.lat());
  $("#longitude").val(place.geometry.location.lng());

  for (var component in componentForm) {
    document.getElementById(component).value = '';
    document.getElementById(component).disabled = false;
  }

  for (var i = 0; i < place.address_components.length; i++) {
    var addressType = place.address_components[i].types[0];
    if (componentForm[addressType]) {
      var val = place.address_components[i][componentForm[addressType]];
      document.getElementById(addressType).value = val;
    }
  }
}

function geolocate() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var geolocation = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      var circle = new google.maps.Circle({
        center: geolocation,
        radius: position.coords.accuracy
      });
      autocomplete.setBounds(circle.getBounds());
    });
  }
}
</script>